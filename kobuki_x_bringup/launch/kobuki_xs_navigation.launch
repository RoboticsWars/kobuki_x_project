<launch>
  <arg name="kobuki_serial_port" default="/dev/kobuki"/>
  <arg name="base" default="kobuki"/>
  <arg name="stacks" default="circle_board"/>
  <arg name="lidar_type" default="$(env TURTLEBOT_3D_SENSOR)"/>
  <arg name="3d_sensor" default="$(arg lidar_type)"/>
  <arg if="$(eval 'rplidar_s1' in arg('lidar_type'))" name="rplidar_serial_port" default="/dev/rplidars1"/>
  <arg if="$(eval 'rplidar_a2' in arg('lidar_type'))" name="rplidar_serial_port" default="/dev/rplidara2"/>
  <arg if="$(eval 'ldslidar' in arg('lidar_type'))" name="ldslidar_serial_port" default="/dev/rplidara2"/>
  <arg name="map_file" default="$(env TURTLEBOT_MAP_FILE)"/>
  <!--Bringups the base-->
  <include file="$(find turtlebot_bringup)/launch/includes/mobile_base.launch.xml">
	  <arg name="base" value="$(arg base)" />
	  <arg name="serialport" value="$(arg kobuki_serial_port)"/>
  </include>
  <!--Launch the rplidar-->
  <include if="$(eval 'rplidar_a2' in arg('lidar_type'))" file="$(find kobuki_x_description)/launch/rplidara2_for_kobuki_xs.launch">
    <arg name="rplidar_serial_port" value="$(arg rplidar_serial_port)"/>
  </include>
  <include if="$(eval 'rplidar_s1' in arg('lidar_type'))" file="$(find kobuki_x_description)/launch/rplidars1_for_kobuki_xs.launch">
    <arg name="rplidar_serial_port" value="$(arg rplidar_serial_port)"/>
  </include>
  <include if="$(eval 'paclidar' in arg('lidar_type'))" file="$(find lidar_driver)/launch/lidar_bringup.launch">
    <arg name="angle_offset" default="90" />
  </include>
  <include if="$(eval 'ldslidar' in arg('lidar_type'))" file="$(find kobuki_x_description)/launch/ldslidar_for_kobuki_xs.launch">
    <arg name="ldslidar_serial_port" value="$(arg ldslidar_serial_port)"/>
  </include>
  <!--Launch the kinect2 and convert pointcloud to laser if it have kincet2-->
  <include if="$(eval 'kinect2' in arg('lidar_type'))" file="$(find kinect2_bridge)/launch/kinect2_cloudtolaser.launch"/>
  <!-- Map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
  <!-- AMCL -->
  <arg name="custom_amcl_launch_file" default="$(find turtlebot_navigation)/launch/includes/amcl/amcl.launch.xml"/>
  <arg name="initial_pose_x" default="0.0"/> <!-- Use 17.0 for willow's map in simulation -->
  <arg name="initial_pose_y" default="0.0"/> <!-- Use 17.0 for willow's map in simulation -->
  <arg name="initial_pose_a" default="0.0"/>
  <include file="$(arg custom_amcl_launch_file)">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>
  <!-- Move base -->
  <arg name="custom_param_file" default="$(find turtlebot_navigation)/param/costmap_common_params.yaml"/>
  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml">
    <arg name="custom_param_file" value="$(arg custom_param_file)"/>
  </include>
  <!-- robot description -->
  <include file="$(find kobuki_x_bringup)/launch/description.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
  </include>
  <!-- For nav2djs to display robot -->
  <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher" />
</launch>
